groups:
  - name: allodoc-application
    interval: 30s
    rules:
      # Application Health Alerts
      - alert: ApplicationDown
        expr: up{job="allodoc-api"} == 0
        for: 1m
        labels:
          severity: critical
          service: api
        annotations:
          summary: "AlloDoc API application is down"
          description: "The AlloDoc API application has been down for more than 1 minute."
          runbook: "Check application logs and container status. Consider rollback if necessary."

      - alert: HighErrorRate
        expr: rate(http_requests_total{job="allodoc-api",status=~"5.."}[5m]) > 0.1
        for: 2m
        labels:
          severity: critical
          service: api
        annotations:
          summary: "High error rate detected"
          description: "Error rate is {{ $value }} errors per second for the last 5 minutes."
          runbook: "Check application logs for error patterns. Investigate recent deployments."

      - alert: HighResponseTime
        expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket{job="allodoc-api"}[5m])) > 2
        for: 5m
        labels:
          severity: warning
          service: api
        annotations:
          summary: "High response time detected"
          description: "95th percentile response time is {{ $value }}s for the last 5 minutes."
          runbook: "Investigate slow queries, check database performance, monitor resource usage."

      - alert: HighMemoryUsage
        expr: (container_memory_usage_bytes{name="allodoc_api_prod"} / container_spec_memory_limit_bytes{name="allodoc_api_prod"}) * 100 > 80
        for: 5m
        labels:
          severity: warning
          service: api
        annotations:
          summary: "High memory usage"
          description: "API container memory usage is {{ $value }}%"
          runbook: "Check for memory leaks, optimize queries, consider scaling."

      - alert: HighCPUUsage
        expr: rate(container_cpu_usage_seconds_total{name="allodoc_api_prod"}[5m]) * 100 > 80
        for: 10m
        labels:
          severity: warning
          service: api
        annotations:
          summary: "High CPU usage"
          description: "Backend container CPU usage is {{ $value }}%"
          runbook: "Check for CPU-intensive operations, consider scaling."

  - name: allodoc-database
    interval: 30s
    rules:
      # Database Health Alerts
      - alert: DatabaseDown
        expr: up{job="postgres"} == 0
        for: 1m
        labels:
          severity: critical
          service: database
        annotations:
          summary: "PostgreSQL database is down"
          description: "The PostgreSQL database has been down for more than 1 minute."
          runbook: "Check database container status and logs. Verify data integrity."

      - alert: DatabaseHighConnections
        expr: pg_stat_database_numbackends / pg_settings_max_connections * 100 > 80
        for: 5m
        labels:
          severity: warning
          service: database
        annotations:
          summary: "High database connection usage"
          description: "Database connection usage is {{ $value }}%"
          runbook: "Check for connection leaks, optimize connection pooling."

      - alert: DatabaseSlowQueries
        expr: rate(pg_stat_database_tup_fetched[5m]) / rate(pg_stat_database_tup_returned[5m]) < 0.1
        for: 10m
        labels:
          severity: warning
          service: database
        annotations:
          summary: "Database queries are running slowly"
          description: "Query efficiency is {{ $value }}"
          runbook: "Analyze slow query logs, check for missing indexes."

      - alert: DatabaseDiskSpaceHigh
        expr: (pg_database_size_bytes / (1024^3)) > 5
        for: 5m
        labels:
          severity: warning
          service: database
        annotations:
          summary: "Database size is growing large"
          description: "Database size is {{ $value }}GB"
          runbook: "Review data retention policies, consider archiving old data."

  - name: allodoc-infrastructure
    interval: 30s
    rules:
      # System Resource Alerts
      - alert: HighDiskUsage
        expr: (node_filesystem_avail_bytes / node_filesystem_size_bytes) * 100 < 20
        for: 5m
        labels:
          severity: warning
          service: system
        annotations:
          summary: "Disk space is running low"
          description: "Disk usage is {{ $value }}% full"
          runbook: "Clean up logs, temporary files, or old Docker images."

      - alert: HighSystemLoad
        expr: node_load15 > 2
        for: 10m
        labels:
          severity: warning
          service: system
        annotations:
          summary: "High system load"
          description: "System load is {{ $value }}"
          runbook: "Check for resource-intensive processes, consider scaling."

      - alert: RedisDown
        expr: up{job="redis"} == 0
        for: 2m
        labels:
          severity: warning
          service: cache
        annotations:
          summary: "Redis cache is down"
          description: "Redis has been down for more than 2 minutes."
          runbook: "Check Redis container status and logs. Sessions may be affected."

      - alert: NginxDown
        expr: up{job="nginx"} == 0
        for: 1m
        labels:
          severity: critical
          service: proxy
        annotations:
          summary: "Nginx reverse proxy is down"
          description: "Nginx has been down for more than 1 minute."
          runbook: "Check Nginx container status and configuration. Application may be inaccessible."

  - name: allodoc-ssl
    interval: 1h
    rules:
      # SSL Certificate Alerts
      - alert: SSLCertificateExpiringSoon
        expr: probe_ssl_earliest_cert_expiry - time() < 86400 * 30
        for: 1h
        labels:
          severity: warning
          service: ssl
        annotations:
          summary: "SSL certificate expires soon"
          description: "SSL certificate expires in {{ $value | humanizeDuration }}"
          runbook: "Renew SSL certificate before expiration."

      - alert: SSLCertificateExpired
        expr: probe_ssl_earliest_cert_expiry - time() < 0
        for: 1m
        labels:
          severity: critical
          service: ssl
        annotations:
          summary: "SSL certificate has expired"
          description: "SSL certificate expired {{ $value | humanizeDuration }} ago"
          runbook: "Renew SSL certificate immediately. HTTPS access is compromised."

  - name: allodoc-monitoring
    interval: 30s
    rules:
      # Monitoring System Alerts
      - alert: PrometheusDown
        expr: up{job="prometheus"} == 0
        for: 5m
        labels:
          severity: warning
          service: monitoring
        annotations:
          summary: "Prometheus is down"
          description: "Prometheus monitoring is not available."

      - alert: GrafanaDown
        expr: up{job="grafana"} == 0
        for: 5m
        labels:
          severity: warning
          service: monitoring
        annotations:
          summary: "Grafana is down"
          description: "Grafana dashboard is not available."

      - alert: TooManyAlerts
        expr: count by (severity) (ALERTS{alertstate="firing"}) > 5
        for: 5m
        labels:
          severity: warning
          service: monitoring
        annotations:
          summary: "Too many alerts firing"
          description: "{{ $value }} alerts are currently firing"
          runbook: "Review and prioritize alerts. Check for cascading failures."